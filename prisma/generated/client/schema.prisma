generator client {
  provider = "prisma-client-js"
  output   = "generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id      Int      @id @default(autoincrement())
  name    String
  logoUrl String?
  admin   Admin?   @relation("CityAdmin")
  Mosque  Mosque[]
  prayers Prayer[]
}

model Prayer {
  id      Int     @id @default(autoincrement())
  cityId  Int
  mosqueId Int?
  date    String?
  fajr    String?
  shuruk  String?
  zuhr    String?
  asr     String?
  maghrib String?
  isha    String?
  mechet  String?
  city    City    @relation(fields: [cityId], references: [id])
  mosque  Mosque? @relation(fields: [mosqueId], references: [id])
}

model Mosque {
  id      Int      @id @default(autoincrement())
  cityId  Int
  name    String
  logoUrl String?
  media   Media[]
  prayers Prayer[]
  city    City     @relation(fields: [cityId], references: [id])
  qrCodes QRCode[] @relation("MosqueQRCode")
}

model Media {
  id       Int     @id @default(autoincrement())
  mosqueId Int
  videoUrl String?
  mosque   Mosque  @relation(fields: [mosqueId], references: [id])
}

model QRCode {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  mosqueId    Int
  mosque      Mosque   @relation("MosqueQRCode", fields: [mosqueId], references: [id])
  isPrimary   Boolean  @default(true)
  projectName String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ErrorMessage {
  id      Int    @id @default(autoincrement())
  message String
}

model Admin {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  role      Role
  cityId    Int?     @unique
  city      City?    @relation("CityAdmin", fields: [cityId], references: [id])
}

enum Role {
  SUPER_ADMIN
  CITY_ADMIN
}
